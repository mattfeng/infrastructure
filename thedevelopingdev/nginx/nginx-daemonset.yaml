apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      tolerations:
        - key: "ingress"
          operator: "Equal"
          value: "true"
          effect: "NoExecute"
      nodeSelector:
        node_pool: ingress-pool
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - image: nginx:1.15.3-alpine
          name: nginx
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
          volumeMounts:
            - name: config
              mountPath: "/etc/nginx"
            - name: thedevelopingdev
              mountPath: "/certs/thedevelopingdev.com"
              readOnly: true
            - name: proxy
              mountPath: "/certs/proxy.thedevelopingdev.com"
              readOnly: true
            - name: proxy2
              mountPath: "/certs/proxy2.thedevelopingdev.com"
              readOnly: true
            - name: redirect2
              mountPath: "/certs/go.mattfeng.tech"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: nginx-conf
        - name: thedevelopingdev
          secret:
            secretName: thedevelopingdev-certs
        - name: proxy
          secret:
            secretName: proxy-certs
        - name: proxy2
          secret:
            secretName: proxy2-certs
        - name: redirect2
          secret:
            secretName: redirect2-certs

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    error_log /dev/stdout info;

    events {
      worker_connections 10;
    }

    http {
      access_log /dev/stdout;

      server {  # HTTP redirect for proxy.thedevelopingdev.com
        listen 80;
        server_name intern.thedevelopingdev.com;

        location / {
          proxy_pass http://internship-frontend:3000;
        }
      }

      server {
        listen 443 ssl;
        server_name proxy.thedevelopingdev.com;
        resolver 8.8.8.8;

        ssl on;

        ssl_certificate     /certs/proxy.thedevelopingdev.com/fullchain.pem;
        ssl_certificate_key /certs/proxy.thedevelopingdev.com/privkey.pem;

        location / {
          proxy_set_header Host www.googletagmanager.com;
          proxy_pass https://www.googletagmanager.com$request_uri;
        }
      }

      server {
        listen 443 ssl;
        server_name proxy2.thedevelopingdev.com;
        resolver 8.8.8.8;

        ssl on;

        ssl_certificate     /certs/proxy2.thedevelopingdev.com/fullchain.pem;
        ssl_certificate_key /certs/proxy2.thedevelopingdev.com/privkey.pem;

        location /j/duiovn {
          proxy_set_header Host www.google-analytics.com;

          set $args $args&uip=$remote_addr;

          proxy_pass https://www.google-analytics.com/j/collect;
        }

        location /duiovn {
          proxy_set_header Host www.google-analytics.com;

          set $args $args&uip=$remote_addr;

          proxy_pass https://www.google-analytics.com/collect;
        }

        location / {
          proxy_set_header Host www.google-analytics.com;
          proxy_pass https://www.google-analytics.com$request_uri;
        }
      }

      server {  # HTTP redirect for proxy.thedevelopingdev.com
        listen 80;
        server_name proxy.thedevelopingdev.com proxy2.thedevelopingdev.com;
        return 301 https://$host$request_uri;
      }

      server { # HTTPS for thedevelopingdev.com
        listen 443 ssl;
        server_name thedevelopingdev.com www.thedevelopingdev.com;

        ssl on;

        ssl_certificate     /certs/thedevelopingdev.com/fullchain.pem;
        ssl_certificate_key /certs/thedevelopingdev.com/privkey.pem;

        location / {
          proxy_pass http://tdd-website.default:3000;
        }
      }

      server {  # HTTP redirect for thedevelopingdev.com
        listen 80;
        server_name thedevelopingdev.com www.thedevelopingdev.com;
        return 301 https://$host$request_uri;
      }

      # Certbot challenges (manual)

      # server {
      #   listen 80;
      #   server_name www.thedevelopingdev.com thedevelopingdev.com;

      #   location /.well-known/acme-challenge/ {
      #     add_header Content-Type text/plain;

      #     return 200 "data";
      #   }

      #   location /.well-known/acme-challenge/ {

      #     add_header Content-Type text/plain;
      #     return 200 "data";
      #   }
      # }

      # server {
      #   listen 80;
      #   server_name proxy.thedevelopingdev.com;

      #   location /.well-known/acme-challenge/ {
      #     add_header Content-Type text/plain;

      #     return 200 "ok";
      #   }
      # }

      # server {
      #   listen 80;
      #   server_name proxy2.thedevelopingdev.com;

      #   location /.well-known/acme-challenge/ {
      #     add_header Content-Type text/plain;

      #     return 200 "ok";
      #   }
      # }

      server {
        listen 443 ssl;
        server_name go.mattfeng.tech;

        ssl on;

        ssl_certificate     /certs/go.mattfeng.tech/fullchain.pem;
        ssl_certificate_key /certs/go.mattfeng.tech/privkey.pem;

        location / {
          proxy_pass http://redirect2.default:8080;
        }
      }

      server {  # go.mattfeng.tech
        listen 80;
        server_name go.mattfeng.tech;
        return 301 https://$host$request_uri;
      }

      # Certbot challenges for go.mattfeng.tech
      # server {
      #   listen 80;
      #   server_name go.mattfeng.tech;

      #   location /.well-known/acme-challenge/ {
      #     add_header Content-Type text/plain;
      #     return 200 "data";
      #   }
      # }

    }

